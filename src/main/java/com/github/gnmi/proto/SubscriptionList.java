// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gnmi.proto

package com.github.gnmi.proto;

/**
 * <pre>
 * SubscriptionList is used within a Subscribe message to specify the list of
 * paths that the client wishes to subscribe to. The message consists of a
 * list of (possibly prefixed) paths, and options that relate to the
 * subscription.
 * Reference: gNMI Specification Section 3.5.1.2
 * </pre>
 *
 * Protobuf type {@code gnmi.SubscriptionList}
 */
public  final class SubscriptionList extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:gnmi.SubscriptionList)
    SubscriptionListOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SubscriptionList.newBuilder() to construct.
  private SubscriptionList(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SubscriptionList() {
    subscription_ = java.util.Collections.emptyList();
    mode_ = 0;
    allowAggregation_ = false;
    useModels_ = java.util.Collections.emptyList();
    encoding_ = 0;
    updatesOnly_ = false;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private SubscriptionList(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.github.gnmi.proto.Path.Builder subBuilder = null;
            if (prefix_ != null) {
              subBuilder = prefix_.toBuilder();
            }
            prefix_ = input.readMessage(com.github.gnmi.proto.Path.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(prefix_);
              prefix_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              subscription_ = new java.util.ArrayList<com.github.gnmi.proto.Subscription>();
              mutable_bitField0_ |= 0x00000002;
            }
            subscription_.add(
                input.readMessage(com.github.gnmi.proto.Subscription.parser(), extensionRegistry));
            break;
          }
          case 34: {
            com.github.gnmi.proto.QOSMarking.Builder subBuilder = null;
            if (qos_ != null) {
              subBuilder = qos_.toBuilder();
            }
            qos_ = input.readMessage(com.github.gnmi.proto.QOSMarking.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(qos_);
              qos_ = subBuilder.buildPartial();
            }

            break;
          }
          case 40: {
            int rawValue = input.readEnum();

            mode_ = rawValue;
            break;
          }
          case 48: {

            allowAggregation_ = input.readBool();
            break;
          }
          case 58: {
            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
              useModels_ = new java.util.ArrayList<com.github.gnmi.proto.ModelData>();
              mutable_bitField0_ |= 0x00000020;
            }
            useModels_.add(
                input.readMessage(com.github.gnmi.proto.ModelData.parser(), extensionRegistry));
            break;
          }
          case 64: {
            int rawValue = input.readEnum();

            encoding_ = rawValue;
            break;
          }
          case 72: {

            updatesOnly_ = input.readBool();
            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
        subscription_ = java.util.Collections.unmodifiableList(subscription_);
      }
      if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
        useModels_ = java.util.Collections.unmodifiableList(useModels_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.github.gnmi.proto.GnmiProto.internal_static_gnmi_SubscriptionList_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.github.gnmi.proto.GnmiProto.internal_static_gnmi_SubscriptionList_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.github.gnmi.proto.SubscriptionList.class, com.github.gnmi.proto.SubscriptionList.Builder.class);
  }

  /**
   * <pre>
   * Mode of the subscription.
   * </pre>
   *
   * Protobuf enum {@code gnmi.SubscriptionList.Mode}
   */
  public enum Mode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Values streamed by the target (Sec. 3.5.1.5.2).
     * </pre>
     *
     * <code>STREAM = 0;</code>
     */
    STREAM(0),
    /**
     * <pre>
     * Values sent once-off by the target (Sec. 3.5.1.5.1).
     * </pre>
     *
     * <code>ONCE = 1;</code>
     */
    ONCE(1),
    /**
     * <pre>
     * Values sent in response to a poll request (Sec. 3.5.1.5.3).
     * </pre>
     *
     * <code>POLL = 2;</code>
     */
    POLL(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Values streamed by the target (Sec. 3.5.1.5.2).
     * </pre>
     *
     * <code>STREAM = 0;</code>
     */
    public static final int STREAM_VALUE = 0;
    /**
     * <pre>
     * Values sent once-off by the target (Sec. 3.5.1.5.1).
     * </pre>
     *
     * <code>ONCE = 1;</code>
     */
    public static final int ONCE_VALUE = 1;
    /**
     * <pre>
     * Values sent in response to a poll request (Sec. 3.5.1.5.3).
     * </pre>
     *
     * <code>POLL = 2;</code>
     */
    public static final int POLL_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Mode valueOf(int value) {
      return forNumber(value);
    }

    public static Mode forNumber(int value) {
      switch (value) {
        case 0: return STREAM;
        case 1: return ONCE;
        case 2: return POLL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Mode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Mode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Mode>() {
            public Mode findValueByNumber(int number) {
              return Mode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.github.gnmi.proto.SubscriptionList.getDescriptor().getEnumTypes().get(0);
    }

    private static final Mode[] VALUES = values();

    public static Mode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Mode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:gnmi.SubscriptionList.Mode)
  }

  private int bitField0_;
  public static final int PREFIX_FIELD_NUMBER = 1;
  private com.github.gnmi.proto.Path prefix_;
  /**
   * <pre>
   * Prefix used for paths.
   * </pre>
   *
   * <code>.gnmi.Path prefix = 1;</code>
   */
  public boolean hasPrefix() {
    return prefix_ != null;
  }
  /**
   * <pre>
   * Prefix used for paths.
   * </pre>
   *
   * <code>.gnmi.Path prefix = 1;</code>
   */
  public com.github.gnmi.proto.Path getPrefix() {
    return prefix_ == null ? com.github.gnmi.proto.Path.getDefaultInstance() : prefix_;
  }
  /**
   * <pre>
   * Prefix used for paths.
   * </pre>
   *
   * <code>.gnmi.Path prefix = 1;</code>
   */
  public com.github.gnmi.proto.PathOrBuilder getPrefixOrBuilder() {
    return getPrefix();
  }

  public static final int SUBSCRIPTION_FIELD_NUMBER = 2;
  private java.util.List<com.github.gnmi.proto.Subscription> subscription_;
  /**
   * <pre>
   * Set of subscriptions to create.
   * </pre>
   *
   * <code>repeated .gnmi.Subscription subscription = 2;</code>
   */
  public java.util.List<com.github.gnmi.proto.Subscription> getSubscriptionList() {
    return subscription_;
  }
  /**
   * <pre>
   * Set of subscriptions to create.
   * </pre>
   *
   * <code>repeated .gnmi.Subscription subscription = 2;</code>
   */
  public java.util.List<? extends com.github.gnmi.proto.SubscriptionOrBuilder> 
      getSubscriptionOrBuilderList() {
    return subscription_;
  }
  /**
   * <pre>
   * Set of subscriptions to create.
   * </pre>
   *
   * <code>repeated .gnmi.Subscription subscription = 2;</code>
   */
  public int getSubscriptionCount() {
    return subscription_.size();
  }
  /**
   * <pre>
   * Set of subscriptions to create.
   * </pre>
   *
   * <code>repeated .gnmi.Subscription subscription = 2;</code>
   */
  public com.github.gnmi.proto.Subscription getSubscription(int index) {
    return subscription_.get(index);
  }
  /**
   * <pre>
   * Set of subscriptions to create.
   * </pre>
   *
   * <code>repeated .gnmi.Subscription subscription = 2;</code>
   */
  public com.github.gnmi.proto.SubscriptionOrBuilder getSubscriptionOrBuilder(
      int index) {
    return subscription_.get(index);
  }

  public static final int QOS_FIELD_NUMBER = 4;
  private com.github.gnmi.proto.QOSMarking qos_;
  /**
   * <pre>
   * DSCP marking to be used.
   * </pre>
   *
   * <code>.gnmi.QOSMarking qos = 4;</code>
   */
  public boolean hasQos() {
    return qos_ != null;
  }
  /**
   * <pre>
   * DSCP marking to be used.
   * </pre>
   *
   * <code>.gnmi.QOSMarking qos = 4;</code>
   */
  public com.github.gnmi.proto.QOSMarking getQos() {
    return qos_ == null ? com.github.gnmi.proto.QOSMarking.getDefaultInstance() : qos_;
  }
  /**
   * <pre>
   * DSCP marking to be used.
   * </pre>
   *
   * <code>.gnmi.QOSMarking qos = 4;</code>
   */
  public com.github.gnmi.proto.QOSMarkingOrBuilder getQosOrBuilder() {
    return getQos();
  }

  public static final int MODE_FIELD_NUMBER = 5;
  private int mode_;
  /**
   * <code>.gnmi.SubscriptionList.Mode mode = 5;</code>
   */
  public int getModeValue() {
    return mode_;
  }
  /**
   * <code>.gnmi.SubscriptionList.Mode mode = 5;</code>
   */
  public com.github.gnmi.proto.SubscriptionList.Mode getMode() {
    @SuppressWarnings("deprecation")
    com.github.gnmi.proto.SubscriptionList.Mode result = com.github.gnmi.proto.SubscriptionList.Mode.valueOf(mode_);
    return result == null ? com.github.gnmi.proto.SubscriptionList.Mode.UNRECOGNIZED : result;
  }

  public static final int ALLOW_AGGREGATION_FIELD_NUMBER = 6;
  private boolean allowAggregation_;
  /**
   * <pre>
   * Whether elements of the schema that are marked as eligible for aggregation
   * should be aggregated or not.
   * </pre>
   *
   * <code>bool allow_aggregation = 6;</code>
   */
  public boolean getAllowAggregation() {
    return allowAggregation_;
  }

  public static final int USE_MODELS_FIELD_NUMBER = 7;
  private java.util.List<com.github.gnmi.proto.ModelData> useModels_;
  /**
   * <pre>
   * The set of schemas that define the elements of the data tree that should
   * be sent by the target.
   * </pre>
   *
   * <code>repeated .gnmi.ModelData use_models = 7;</code>
   */
  public java.util.List<com.github.gnmi.proto.ModelData> getUseModelsList() {
    return useModels_;
  }
  /**
   * <pre>
   * The set of schemas that define the elements of the data tree that should
   * be sent by the target.
   * </pre>
   *
   * <code>repeated .gnmi.ModelData use_models = 7;</code>
   */
  public java.util.List<? extends com.github.gnmi.proto.ModelDataOrBuilder> 
      getUseModelsOrBuilderList() {
    return useModels_;
  }
  /**
   * <pre>
   * The set of schemas that define the elements of the data tree that should
   * be sent by the target.
   * </pre>
   *
   * <code>repeated .gnmi.ModelData use_models = 7;</code>
   */
  public int getUseModelsCount() {
    return useModels_.size();
  }
  /**
   * <pre>
   * The set of schemas that define the elements of the data tree that should
   * be sent by the target.
   * </pre>
   *
   * <code>repeated .gnmi.ModelData use_models = 7;</code>
   */
  public com.github.gnmi.proto.ModelData getUseModels(int index) {
    return useModels_.get(index);
  }
  /**
   * <pre>
   * The set of schemas that define the elements of the data tree that should
   * be sent by the target.
   * </pre>
   *
   * <code>repeated .gnmi.ModelData use_models = 7;</code>
   */
  public com.github.gnmi.proto.ModelDataOrBuilder getUseModelsOrBuilder(
      int index) {
    return useModels_.get(index);
  }

  public static final int ENCODING_FIELD_NUMBER = 8;
  private int encoding_;
  /**
   * <pre>
   * The encoding that the target should use within the Notifications generated
   * corresponding to the SubscriptionList.
   * </pre>
   *
   * <code>.gnmi.Encoding encoding = 8;</code>
   */
  public int getEncodingValue() {
    return encoding_;
  }
  /**
   * <pre>
   * The encoding that the target should use within the Notifications generated
   * corresponding to the SubscriptionList.
   * </pre>
   *
   * <code>.gnmi.Encoding encoding = 8;</code>
   */
  public com.github.gnmi.proto.Encoding getEncoding() {
    @SuppressWarnings("deprecation")
    com.github.gnmi.proto.Encoding result = com.github.gnmi.proto.Encoding.valueOf(encoding_);
    return result == null ? com.github.gnmi.proto.Encoding.UNRECOGNIZED : result;
  }

  public static final int UPDATES_ONLY_FIELD_NUMBER = 9;
  private boolean updatesOnly_;
  /**
   * <pre>
   * An optional field to specify that only updates to current state should be
   * sent to a client. If set, the initial state is not sent to the client but
   * rather only the sync message followed by any subsequent updates to the
   * current state. For ONCE and POLL modes, this causes the server to send only
   * the sync message (Sec. 3.5.2.3).
   * </pre>
   *
   * <code>bool updates_only = 9;</code>
   */
  public boolean getUpdatesOnly() {
    return updatesOnly_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (prefix_ != null) {
      output.writeMessage(1, getPrefix());
    }
    for (int i = 0; i < subscription_.size(); i++) {
      output.writeMessage(2, subscription_.get(i));
    }
    if (qos_ != null) {
      output.writeMessage(4, getQos());
    }
    if (mode_ != com.github.gnmi.proto.SubscriptionList.Mode.STREAM.getNumber()) {
      output.writeEnum(5, mode_);
    }
    if (allowAggregation_ != false) {
      output.writeBool(6, allowAggregation_);
    }
    for (int i = 0; i < useModels_.size(); i++) {
      output.writeMessage(7, useModels_.get(i));
    }
    if (encoding_ != com.github.gnmi.proto.Encoding.JSON.getNumber()) {
      output.writeEnum(8, encoding_);
    }
    if (updatesOnly_ != false) {
      output.writeBool(9, updatesOnly_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (prefix_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getPrefix());
    }
    for (int i = 0; i < subscription_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, subscription_.get(i));
    }
    if (qos_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getQos());
    }
    if (mode_ != com.github.gnmi.proto.SubscriptionList.Mode.STREAM.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(5, mode_);
    }
    if (allowAggregation_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(6, allowAggregation_);
    }
    for (int i = 0; i < useModels_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, useModels_.get(i));
    }
    if (encoding_ != com.github.gnmi.proto.Encoding.JSON.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(8, encoding_);
    }
    if (updatesOnly_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(9, updatesOnly_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.github.gnmi.proto.SubscriptionList)) {
      return super.equals(obj);
    }
    com.github.gnmi.proto.SubscriptionList other = (com.github.gnmi.proto.SubscriptionList) obj;

    boolean result = true;
    result = result && (hasPrefix() == other.hasPrefix());
    if (hasPrefix()) {
      result = result && getPrefix()
          .equals(other.getPrefix());
    }
    result = result && getSubscriptionList()
        .equals(other.getSubscriptionList());
    result = result && (hasQos() == other.hasQos());
    if (hasQos()) {
      result = result && getQos()
          .equals(other.getQos());
    }
    result = result && mode_ == other.mode_;
    result = result && (getAllowAggregation()
        == other.getAllowAggregation());
    result = result && getUseModelsList()
        .equals(other.getUseModelsList());
    result = result && encoding_ == other.encoding_;
    result = result && (getUpdatesOnly()
        == other.getUpdatesOnly());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasPrefix()) {
      hash = (37 * hash) + PREFIX_FIELD_NUMBER;
      hash = (53 * hash) + getPrefix().hashCode();
    }
    if (getSubscriptionCount() > 0) {
      hash = (37 * hash) + SUBSCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getSubscriptionList().hashCode();
    }
    if (hasQos()) {
      hash = (37 * hash) + QOS_FIELD_NUMBER;
      hash = (53 * hash) + getQos().hashCode();
    }
    hash = (37 * hash) + MODE_FIELD_NUMBER;
    hash = (53 * hash) + mode_;
    hash = (37 * hash) + ALLOW_AGGREGATION_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getAllowAggregation());
    if (getUseModelsCount() > 0) {
      hash = (37 * hash) + USE_MODELS_FIELD_NUMBER;
      hash = (53 * hash) + getUseModelsList().hashCode();
    }
    hash = (37 * hash) + ENCODING_FIELD_NUMBER;
    hash = (53 * hash) + encoding_;
    hash = (37 * hash) + UPDATES_ONLY_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getUpdatesOnly());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.github.gnmi.proto.SubscriptionList parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.gnmi.proto.SubscriptionList parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.gnmi.proto.SubscriptionList parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.gnmi.proto.SubscriptionList parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.gnmi.proto.SubscriptionList parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.gnmi.proto.SubscriptionList parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.gnmi.proto.SubscriptionList parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.github.gnmi.proto.SubscriptionList parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.github.gnmi.proto.SubscriptionList parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.github.gnmi.proto.SubscriptionList parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.github.gnmi.proto.SubscriptionList parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.github.gnmi.proto.SubscriptionList parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.github.gnmi.proto.SubscriptionList prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * SubscriptionList is used within a Subscribe message to specify the list of
   * paths that the client wishes to subscribe to. The message consists of a
   * list of (possibly prefixed) paths, and options that relate to the
   * subscription.
   * Reference: gNMI Specification Section 3.5.1.2
   * </pre>
   *
   * Protobuf type {@code gnmi.SubscriptionList}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:gnmi.SubscriptionList)
      com.github.gnmi.proto.SubscriptionListOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.gnmi.proto.GnmiProto.internal_static_gnmi_SubscriptionList_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.gnmi.proto.GnmiProto.internal_static_gnmi_SubscriptionList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.gnmi.proto.SubscriptionList.class, com.github.gnmi.proto.SubscriptionList.Builder.class);
    }

    // Construct using com.github.gnmi.proto.SubscriptionList.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getSubscriptionFieldBuilder();
        getUseModelsFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (prefixBuilder_ == null) {
        prefix_ = null;
      } else {
        prefix_ = null;
        prefixBuilder_ = null;
      }
      if (subscriptionBuilder_ == null) {
        subscription_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        subscriptionBuilder_.clear();
      }
      if (qosBuilder_ == null) {
        qos_ = null;
      } else {
        qos_ = null;
        qosBuilder_ = null;
      }
      mode_ = 0;

      allowAggregation_ = false;

      if (useModelsBuilder_ == null) {
        useModels_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
      } else {
        useModelsBuilder_.clear();
      }
      encoding_ = 0;

      updatesOnly_ = false;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.github.gnmi.proto.GnmiProto.internal_static_gnmi_SubscriptionList_descriptor;
    }

    @java.lang.Override
    public com.github.gnmi.proto.SubscriptionList getDefaultInstanceForType() {
      return com.github.gnmi.proto.SubscriptionList.getDefaultInstance();
    }

    @java.lang.Override
    public com.github.gnmi.proto.SubscriptionList build() {
      com.github.gnmi.proto.SubscriptionList result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.github.gnmi.proto.SubscriptionList buildPartial() {
      com.github.gnmi.proto.SubscriptionList result = new com.github.gnmi.proto.SubscriptionList(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (prefixBuilder_ == null) {
        result.prefix_ = prefix_;
      } else {
        result.prefix_ = prefixBuilder_.build();
      }
      if (subscriptionBuilder_ == null) {
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          subscription_ = java.util.Collections.unmodifiableList(subscription_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.subscription_ = subscription_;
      } else {
        result.subscription_ = subscriptionBuilder_.build();
      }
      if (qosBuilder_ == null) {
        result.qos_ = qos_;
      } else {
        result.qos_ = qosBuilder_.build();
      }
      result.mode_ = mode_;
      result.allowAggregation_ = allowAggregation_;
      if (useModelsBuilder_ == null) {
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          useModels_ = java.util.Collections.unmodifiableList(useModels_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.useModels_ = useModels_;
      } else {
        result.useModels_ = useModelsBuilder_.build();
      }
      result.encoding_ = encoding_;
      result.updatesOnly_ = updatesOnly_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.github.gnmi.proto.SubscriptionList) {
        return mergeFrom((com.github.gnmi.proto.SubscriptionList)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.github.gnmi.proto.SubscriptionList other) {
      if (other == com.github.gnmi.proto.SubscriptionList.getDefaultInstance()) return this;
      if (other.hasPrefix()) {
        mergePrefix(other.getPrefix());
      }
      if (subscriptionBuilder_ == null) {
        if (!other.subscription_.isEmpty()) {
          if (subscription_.isEmpty()) {
            subscription_ = other.subscription_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureSubscriptionIsMutable();
            subscription_.addAll(other.subscription_);
          }
          onChanged();
        }
      } else {
        if (!other.subscription_.isEmpty()) {
          if (subscriptionBuilder_.isEmpty()) {
            subscriptionBuilder_.dispose();
            subscriptionBuilder_ = null;
            subscription_ = other.subscription_;
            bitField0_ = (bitField0_ & ~0x00000002);
            subscriptionBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSubscriptionFieldBuilder() : null;
          } else {
            subscriptionBuilder_.addAllMessages(other.subscription_);
          }
        }
      }
      if (other.hasQos()) {
        mergeQos(other.getQos());
      }
      if (other.mode_ != 0) {
        setModeValue(other.getModeValue());
      }
      if (other.getAllowAggregation() != false) {
        setAllowAggregation(other.getAllowAggregation());
      }
      if (useModelsBuilder_ == null) {
        if (!other.useModels_.isEmpty()) {
          if (useModels_.isEmpty()) {
            useModels_ = other.useModels_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureUseModelsIsMutable();
            useModels_.addAll(other.useModels_);
          }
          onChanged();
        }
      } else {
        if (!other.useModels_.isEmpty()) {
          if (useModelsBuilder_.isEmpty()) {
            useModelsBuilder_.dispose();
            useModelsBuilder_ = null;
            useModels_ = other.useModels_;
            bitField0_ = (bitField0_ & ~0x00000020);
            useModelsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getUseModelsFieldBuilder() : null;
          } else {
            useModelsBuilder_.addAllMessages(other.useModels_);
          }
        }
      }
      if (other.encoding_ != 0) {
        setEncodingValue(other.getEncodingValue());
      }
      if (other.getUpdatesOnly() != false) {
        setUpdatesOnly(other.getUpdatesOnly());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.github.gnmi.proto.SubscriptionList parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.github.gnmi.proto.SubscriptionList) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.github.gnmi.proto.Path prefix_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.gnmi.proto.Path, com.github.gnmi.proto.Path.Builder, com.github.gnmi.proto.PathOrBuilder> prefixBuilder_;
    /**
     * <pre>
     * Prefix used for paths.
     * </pre>
     *
     * <code>.gnmi.Path prefix = 1;</code>
     */
    public boolean hasPrefix() {
      return prefixBuilder_ != null || prefix_ != null;
    }
    /**
     * <pre>
     * Prefix used for paths.
     * </pre>
     *
     * <code>.gnmi.Path prefix = 1;</code>
     */
    public com.github.gnmi.proto.Path getPrefix() {
      if (prefixBuilder_ == null) {
        return prefix_ == null ? com.github.gnmi.proto.Path.getDefaultInstance() : prefix_;
      } else {
        return prefixBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Prefix used for paths.
     * </pre>
     *
     * <code>.gnmi.Path prefix = 1;</code>
     */
    public Builder setPrefix(com.github.gnmi.proto.Path value) {
      if (prefixBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        prefix_ = value;
        onChanged();
      } else {
        prefixBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Prefix used for paths.
     * </pre>
     *
     * <code>.gnmi.Path prefix = 1;</code>
     */
    public Builder setPrefix(
        com.github.gnmi.proto.Path.Builder builderForValue) {
      if (prefixBuilder_ == null) {
        prefix_ = builderForValue.build();
        onChanged();
      } else {
        prefixBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Prefix used for paths.
     * </pre>
     *
     * <code>.gnmi.Path prefix = 1;</code>
     */
    public Builder mergePrefix(com.github.gnmi.proto.Path value) {
      if (prefixBuilder_ == null) {
        if (prefix_ != null) {
          prefix_ =
            com.github.gnmi.proto.Path.newBuilder(prefix_).mergeFrom(value).buildPartial();
        } else {
          prefix_ = value;
        }
        onChanged();
      } else {
        prefixBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Prefix used for paths.
     * </pre>
     *
     * <code>.gnmi.Path prefix = 1;</code>
     */
    public Builder clearPrefix() {
      if (prefixBuilder_ == null) {
        prefix_ = null;
        onChanged();
      } else {
        prefix_ = null;
        prefixBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Prefix used for paths.
     * </pre>
     *
     * <code>.gnmi.Path prefix = 1;</code>
     */
    public com.github.gnmi.proto.Path.Builder getPrefixBuilder() {
      
      onChanged();
      return getPrefixFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Prefix used for paths.
     * </pre>
     *
     * <code>.gnmi.Path prefix = 1;</code>
     */
    public com.github.gnmi.proto.PathOrBuilder getPrefixOrBuilder() {
      if (prefixBuilder_ != null) {
        return prefixBuilder_.getMessageOrBuilder();
      } else {
        return prefix_ == null ?
            com.github.gnmi.proto.Path.getDefaultInstance() : prefix_;
      }
    }
    /**
     * <pre>
     * Prefix used for paths.
     * </pre>
     *
     * <code>.gnmi.Path prefix = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.gnmi.proto.Path, com.github.gnmi.proto.Path.Builder, com.github.gnmi.proto.PathOrBuilder> 
        getPrefixFieldBuilder() {
      if (prefixBuilder_ == null) {
        prefixBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.gnmi.proto.Path, com.github.gnmi.proto.Path.Builder, com.github.gnmi.proto.PathOrBuilder>(
                getPrefix(),
                getParentForChildren(),
                isClean());
        prefix_ = null;
      }
      return prefixBuilder_;
    }

    private java.util.List<com.github.gnmi.proto.Subscription> subscription_ =
      java.util.Collections.emptyList();
    private void ensureSubscriptionIsMutable() {
      if (!((bitField0_ & 0x00000002) == 0x00000002)) {
        subscription_ = new java.util.ArrayList<com.github.gnmi.proto.Subscription>(subscription_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.github.gnmi.proto.Subscription, com.github.gnmi.proto.Subscription.Builder, com.github.gnmi.proto.SubscriptionOrBuilder> subscriptionBuilder_;

    /**
     * <pre>
     * Set of subscriptions to create.
     * </pre>
     *
     * <code>repeated .gnmi.Subscription subscription = 2;</code>
     */
    public java.util.List<com.github.gnmi.proto.Subscription> getSubscriptionList() {
      if (subscriptionBuilder_ == null) {
        return java.util.Collections.unmodifiableList(subscription_);
      } else {
        return subscriptionBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Set of subscriptions to create.
     * </pre>
     *
     * <code>repeated .gnmi.Subscription subscription = 2;</code>
     */
    public int getSubscriptionCount() {
      if (subscriptionBuilder_ == null) {
        return subscription_.size();
      } else {
        return subscriptionBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Set of subscriptions to create.
     * </pre>
     *
     * <code>repeated .gnmi.Subscription subscription = 2;</code>
     */
    public com.github.gnmi.proto.Subscription getSubscription(int index) {
      if (subscriptionBuilder_ == null) {
        return subscription_.get(index);
      } else {
        return subscriptionBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Set of subscriptions to create.
     * </pre>
     *
     * <code>repeated .gnmi.Subscription subscription = 2;</code>
     */
    public Builder setSubscription(
        int index, com.github.gnmi.proto.Subscription value) {
      if (subscriptionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSubscriptionIsMutable();
        subscription_.set(index, value);
        onChanged();
      } else {
        subscriptionBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Set of subscriptions to create.
     * </pre>
     *
     * <code>repeated .gnmi.Subscription subscription = 2;</code>
     */
    public Builder setSubscription(
        int index, com.github.gnmi.proto.Subscription.Builder builderForValue) {
      if (subscriptionBuilder_ == null) {
        ensureSubscriptionIsMutable();
        subscription_.set(index, builderForValue.build());
        onChanged();
      } else {
        subscriptionBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Set of subscriptions to create.
     * </pre>
     *
     * <code>repeated .gnmi.Subscription subscription = 2;</code>
     */
    public Builder addSubscription(com.github.gnmi.proto.Subscription value) {
      if (subscriptionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSubscriptionIsMutable();
        subscription_.add(value);
        onChanged();
      } else {
        subscriptionBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Set of subscriptions to create.
     * </pre>
     *
     * <code>repeated .gnmi.Subscription subscription = 2;</code>
     */
    public Builder addSubscription(
        int index, com.github.gnmi.proto.Subscription value) {
      if (subscriptionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSubscriptionIsMutable();
        subscription_.add(index, value);
        onChanged();
      } else {
        subscriptionBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Set of subscriptions to create.
     * </pre>
     *
     * <code>repeated .gnmi.Subscription subscription = 2;</code>
     */
    public Builder addSubscription(
        com.github.gnmi.proto.Subscription.Builder builderForValue) {
      if (subscriptionBuilder_ == null) {
        ensureSubscriptionIsMutable();
        subscription_.add(builderForValue.build());
        onChanged();
      } else {
        subscriptionBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Set of subscriptions to create.
     * </pre>
     *
     * <code>repeated .gnmi.Subscription subscription = 2;</code>
     */
    public Builder addSubscription(
        int index, com.github.gnmi.proto.Subscription.Builder builderForValue) {
      if (subscriptionBuilder_ == null) {
        ensureSubscriptionIsMutable();
        subscription_.add(index, builderForValue.build());
        onChanged();
      } else {
        subscriptionBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Set of subscriptions to create.
     * </pre>
     *
     * <code>repeated .gnmi.Subscription subscription = 2;</code>
     */
    public Builder addAllSubscription(
        java.lang.Iterable<? extends com.github.gnmi.proto.Subscription> values) {
      if (subscriptionBuilder_ == null) {
        ensureSubscriptionIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, subscription_);
        onChanged();
      } else {
        subscriptionBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Set of subscriptions to create.
     * </pre>
     *
     * <code>repeated .gnmi.Subscription subscription = 2;</code>
     */
    public Builder clearSubscription() {
      if (subscriptionBuilder_ == null) {
        subscription_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        subscriptionBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Set of subscriptions to create.
     * </pre>
     *
     * <code>repeated .gnmi.Subscription subscription = 2;</code>
     */
    public Builder removeSubscription(int index) {
      if (subscriptionBuilder_ == null) {
        ensureSubscriptionIsMutable();
        subscription_.remove(index);
        onChanged();
      } else {
        subscriptionBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Set of subscriptions to create.
     * </pre>
     *
     * <code>repeated .gnmi.Subscription subscription = 2;</code>
     */
    public com.github.gnmi.proto.Subscription.Builder getSubscriptionBuilder(
        int index) {
      return getSubscriptionFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Set of subscriptions to create.
     * </pre>
     *
     * <code>repeated .gnmi.Subscription subscription = 2;</code>
     */
    public com.github.gnmi.proto.SubscriptionOrBuilder getSubscriptionOrBuilder(
        int index) {
      if (subscriptionBuilder_ == null) {
        return subscription_.get(index);  } else {
        return subscriptionBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Set of subscriptions to create.
     * </pre>
     *
     * <code>repeated .gnmi.Subscription subscription = 2;</code>
     */
    public java.util.List<? extends com.github.gnmi.proto.SubscriptionOrBuilder> 
         getSubscriptionOrBuilderList() {
      if (subscriptionBuilder_ != null) {
        return subscriptionBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(subscription_);
      }
    }
    /**
     * <pre>
     * Set of subscriptions to create.
     * </pre>
     *
     * <code>repeated .gnmi.Subscription subscription = 2;</code>
     */
    public com.github.gnmi.proto.Subscription.Builder addSubscriptionBuilder() {
      return getSubscriptionFieldBuilder().addBuilder(
          com.github.gnmi.proto.Subscription.getDefaultInstance());
    }
    /**
     * <pre>
     * Set of subscriptions to create.
     * </pre>
     *
     * <code>repeated .gnmi.Subscription subscription = 2;</code>
     */
    public com.github.gnmi.proto.Subscription.Builder addSubscriptionBuilder(
        int index) {
      return getSubscriptionFieldBuilder().addBuilder(
          index, com.github.gnmi.proto.Subscription.getDefaultInstance());
    }
    /**
     * <pre>
     * Set of subscriptions to create.
     * </pre>
     *
     * <code>repeated .gnmi.Subscription subscription = 2;</code>
     */
    public java.util.List<com.github.gnmi.proto.Subscription.Builder> 
         getSubscriptionBuilderList() {
      return getSubscriptionFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.github.gnmi.proto.Subscription, com.github.gnmi.proto.Subscription.Builder, com.github.gnmi.proto.SubscriptionOrBuilder> 
        getSubscriptionFieldBuilder() {
      if (subscriptionBuilder_ == null) {
        subscriptionBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.github.gnmi.proto.Subscription, com.github.gnmi.proto.Subscription.Builder, com.github.gnmi.proto.SubscriptionOrBuilder>(
                subscription_,
                ((bitField0_ & 0x00000002) == 0x00000002),
                getParentForChildren(),
                isClean());
        subscription_ = null;
      }
      return subscriptionBuilder_;
    }

    private com.github.gnmi.proto.QOSMarking qos_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.gnmi.proto.QOSMarking, com.github.gnmi.proto.QOSMarking.Builder, com.github.gnmi.proto.QOSMarkingOrBuilder> qosBuilder_;
    /**
     * <pre>
     * DSCP marking to be used.
     * </pre>
     *
     * <code>.gnmi.QOSMarking qos = 4;</code>
     */
    public boolean hasQos() {
      return qosBuilder_ != null || qos_ != null;
    }
    /**
     * <pre>
     * DSCP marking to be used.
     * </pre>
     *
     * <code>.gnmi.QOSMarking qos = 4;</code>
     */
    public com.github.gnmi.proto.QOSMarking getQos() {
      if (qosBuilder_ == null) {
        return qos_ == null ? com.github.gnmi.proto.QOSMarking.getDefaultInstance() : qos_;
      } else {
        return qosBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * DSCP marking to be used.
     * </pre>
     *
     * <code>.gnmi.QOSMarking qos = 4;</code>
     */
    public Builder setQos(com.github.gnmi.proto.QOSMarking value) {
      if (qosBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        qos_ = value;
        onChanged();
      } else {
        qosBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * DSCP marking to be used.
     * </pre>
     *
     * <code>.gnmi.QOSMarking qos = 4;</code>
     */
    public Builder setQos(
        com.github.gnmi.proto.QOSMarking.Builder builderForValue) {
      if (qosBuilder_ == null) {
        qos_ = builderForValue.build();
        onChanged();
      } else {
        qosBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * DSCP marking to be used.
     * </pre>
     *
     * <code>.gnmi.QOSMarking qos = 4;</code>
     */
    public Builder mergeQos(com.github.gnmi.proto.QOSMarking value) {
      if (qosBuilder_ == null) {
        if (qos_ != null) {
          qos_ =
            com.github.gnmi.proto.QOSMarking.newBuilder(qos_).mergeFrom(value).buildPartial();
        } else {
          qos_ = value;
        }
        onChanged();
      } else {
        qosBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * DSCP marking to be used.
     * </pre>
     *
     * <code>.gnmi.QOSMarking qos = 4;</code>
     */
    public Builder clearQos() {
      if (qosBuilder_ == null) {
        qos_ = null;
        onChanged();
      } else {
        qos_ = null;
        qosBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * DSCP marking to be used.
     * </pre>
     *
     * <code>.gnmi.QOSMarking qos = 4;</code>
     */
    public com.github.gnmi.proto.QOSMarking.Builder getQosBuilder() {
      
      onChanged();
      return getQosFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * DSCP marking to be used.
     * </pre>
     *
     * <code>.gnmi.QOSMarking qos = 4;</code>
     */
    public com.github.gnmi.proto.QOSMarkingOrBuilder getQosOrBuilder() {
      if (qosBuilder_ != null) {
        return qosBuilder_.getMessageOrBuilder();
      } else {
        return qos_ == null ?
            com.github.gnmi.proto.QOSMarking.getDefaultInstance() : qos_;
      }
    }
    /**
     * <pre>
     * DSCP marking to be used.
     * </pre>
     *
     * <code>.gnmi.QOSMarking qos = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.gnmi.proto.QOSMarking, com.github.gnmi.proto.QOSMarking.Builder, com.github.gnmi.proto.QOSMarkingOrBuilder> 
        getQosFieldBuilder() {
      if (qosBuilder_ == null) {
        qosBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.gnmi.proto.QOSMarking, com.github.gnmi.proto.QOSMarking.Builder, com.github.gnmi.proto.QOSMarkingOrBuilder>(
                getQos(),
                getParentForChildren(),
                isClean());
        qos_ = null;
      }
      return qosBuilder_;
    }

    private int mode_ = 0;
    /**
     * <code>.gnmi.SubscriptionList.Mode mode = 5;</code>
     */
    public int getModeValue() {
      return mode_;
    }
    /**
     * <code>.gnmi.SubscriptionList.Mode mode = 5;</code>
     */
    public Builder setModeValue(int value) {
      mode_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.gnmi.SubscriptionList.Mode mode = 5;</code>
     */
    public com.github.gnmi.proto.SubscriptionList.Mode getMode() {
      @SuppressWarnings("deprecation")
      com.github.gnmi.proto.SubscriptionList.Mode result = com.github.gnmi.proto.SubscriptionList.Mode.valueOf(mode_);
      return result == null ? com.github.gnmi.proto.SubscriptionList.Mode.UNRECOGNIZED : result;
    }
    /**
     * <code>.gnmi.SubscriptionList.Mode mode = 5;</code>
     */
    public Builder setMode(com.github.gnmi.proto.SubscriptionList.Mode value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      mode_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.gnmi.SubscriptionList.Mode mode = 5;</code>
     */
    public Builder clearMode() {
      
      mode_ = 0;
      onChanged();
      return this;
    }

    private boolean allowAggregation_ ;
    /**
     * <pre>
     * Whether elements of the schema that are marked as eligible for aggregation
     * should be aggregated or not.
     * </pre>
     *
     * <code>bool allow_aggregation = 6;</code>
     */
    public boolean getAllowAggregation() {
      return allowAggregation_;
    }
    /**
     * <pre>
     * Whether elements of the schema that are marked as eligible for aggregation
     * should be aggregated or not.
     * </pre>
     *
     * <code>bool allow_aggregation = 6;</code>
     */
    public Builder setAllowAggregation(boolean value) {
      
      allowAggregation_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether elements of the schema that are marked as eligible for aggregation
     * should be aggregated or not.
     * </pre>
     *
     * <code>bool allow_aggregation = 6;</code>
     */
    public Builder clearAllowAggregation() {
      
      allowAggregation_ = false;
      onChanged();
      return this;
    }

    private java.util.List<com.github.gnmi.proto.ModelData> useModels_ =
      java.util.Collections.emptyList();
    private void ensureUseModelsIsMutable() {
      if (!((bitField0_ & 0x00000020) == 0x00000020)) {
        useModels_ = new java.util.ArrayList<com.github.gnmi.proto.ModelData>(useModels_);
        bitField0_ |= 0x00000020;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.github.gnmi.proto.ModelData, com.github.gnmi.proto.ModelData.Builder, com.github.gnmi.proto.ModelDataOrBuilder> useModelsBuilder_;

    /**
     * <pre>
     * The set of schemas that define the elements of the data tree that should
     * be sent by the target.
     * </pre>
     *
     * <code>repeated .gnmi.ModelData use_models = 7;</code>
     */
    public java.util.List<com.github.gnmi.proto.ModelData> getUseModelsList() {
      if (useModelsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(useModels_);
      } else {
        return useModelsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The set of schemas that define the elements of the data tree that should
     * be sent by the target.
     * </pre>
     *
     * <code>repeated .gnmi.ModelData use_models = 7;</code>
     */
    public int getUseModelsCount() {
      if (useModelsBuilder_ == null) {
        return useModels_.size();
      } else {
        return useModelsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The set of schemas that define the elements of the data tree that should
     * be sent by the target.
     * </pre>
     *
     * <code>repeated .gnmi.ModelData use_models = 7;</code>
     */
    public com.github.gnmi.proto.ModelData getUseModels(int index) {
      if (useModelsBuilder_ == null) {
        return useModels_.get(index);
      } else {
        return useModelsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The set of schemas that define the elements of the data tree that should
     * be sent by the target.
     * </pre>
     *
     * <code>repeated .gnmi.ModelData use_models = 7;</code>
     */
    public Builder setUseModels(
        int index, com.github.gnmi.proto.ModelData value) {
      if (useModelsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUseModelsIsMutable();
        useModels_.set(index, value);
        onChanged();
      } else {
        useModelsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The set of schemas that define the elements of the data tree that should
     * be sent by the target.
     * </pre>
     *
     * <code>repeated .gnmi.ModelData use_models = 7;</code>
     */
    public Builder setUseModels(
        int index, com.github.gnmi.proto.ModelData.Builder builderForValue) {
      if (useModelsBuilder_ == null) {
        ensureUseModelsIsMutable();
        useModels_.set(index, builderForValue.build());
        onChanged();
      } else {
        useModelsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The set of schemas that define the elements of the data tree that should
     * be sent by the target.
     * </pre>
     *
     * <code>repeated .gnmi.ModelData use_models = 7;</code>
     */
    public Builder addUseModels(com.github.gnmi.proto.ModelData value) {
      if (useModelsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUseModelsIsMutable();
        useModels_.add(value);
        onChanged();
      } else {
        useModelsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The set of schemas that define the elements of the data tree that should
     * be sent by the target.
     * </pre>
     *
     * <code>repeated .gnmi.ModelData use_models = 7;</code>
     */
    public Builder addUseModels(
        int index, com.github.gnmi.proto.ModelData value) {
      if (useModelsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUseModelsIsMutable();
        useModels_.add(index, value);
        onChanged();
      } else {
        useModelsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The set of schemas that define the elements of the data tree that should
     * be sent by the target.
     * </pre>
     *
     * <code>repeated .gnmi.ModelData use_models = 7;</code>
     */
    public Builder addUseModels(
        com.github.gnmi.proto.ModelData.Builder builderForValue) {
      if (useModelsBuilder_ == null) {
        ensureUseModelsIsMutable();
        useModels_.add(builderForValue.build());
        onChanged();
      } else {
        useModelsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The set of schemas that define the elements of the data tree that should
     * be sent by the target.
     * </pre>
     *
     * <code>repeated .gnmi.ModelData use_models = 7;</code>
     */
    public Builder addUseModels(
        int index, com.github.gnmi.proto.ModelData.Builder builderForValue) {
      if (useModelsBuilder_ == null) {
        ensureUseModelsIsMutable();
        useModels_.add(index, builderForValue.build());
        onChanged();
      } else {
        useModelsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The set of schemas that define the elements of the data tree that should
     * be sent by the target.
     * </pre>
     *
     * <code>repeated .gnmi.ModelData use_models = 7;</code>
     */
    public Builder addAllUseModels(
        java.lang.Iterable<? extends com.github.gnmi.proto.ModelData> values) {
      if (useModelsBuilder_ == null) {
        ensureUseModelsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, useModels_);
        onChanged();
      } else {
        useModelsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The set of schemas that define the elements of the data tree that should
     * be sent by the target.
     * </pre>
     *
     * <code>repeated .gnmi.ModelData use_models = 7;</code>
     */
    public Builder clearUseModels() {
      if (useModelsBuilder_ == null) {
        useModels_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
      } else {
        useModelsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The set of schemas that define the elements of the data tree that should
     * be sent by the target.
     * </pre>
     *
     * <code>repeated .gnmi.ModelData use_models = 7;</code>
     */
    public Builder removeUseModels(int index) {
      if (useModelsBuilder_ == null) {
        ensureUseModelsIsMutable();
        useModels_.remove(index);
        onChanged();
      } else {
        useModelsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The set of schemas that define the elements of the data tree that should
     * be sent by the target.
     * </pre>
     *
     * <code>repeated .gnmi.ModelData use_models = 7;</code>
     */
    public com.github.gnmi.proto.ModelData.Builder getUseModelsBuilder(
        int index) {
      return getUseModelsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The set of schemas that define the elements of the data tree that should
     * be sent by the target.
     * </pre>
     *
     * <code>repeated .gnmi.ModelData use_models = 7;</code>
     */
    public com.github.gnmi.proto.ModelDataOrBuilder getUseModelsOrBuilder(
        int index) {
      if (useModelsBuilder_ == null) {
        return useModels_.get(index);  } else {
        return useModelsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The set of schemas that define the elements of the data tree that should
     * be sent by the target.
     * </pre>
     *
     * <code>repeated .gnmi.ModelData use_models = 7;</code>
     */
    public java.util.List<? extends com.github.gnmi.proto.ModelDataOrBuilder> 
         getUseModelsOrBuilderList() {
      if (useModelsBuilder_ != null) {
        return useModelsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(useModels_);
      }
    }
    /**
     * <pre>
     * The set of schemas that define the elements of the data tree that should
     * be sent by the target.
     * </pre>
     *
     * <code>repeated .gnmi.ModelData use_models = 7;</code>
     */
    public com.github.gnmi.proto.ModelData.Builder addUseModelsBuilder() {
      return getUseModelsFieldBuilder().addBuilder(
          com.github.gnmi.proto.ModelData.getDefaultInstance());
    }
    /**
     * <pre>
     * The set of schemas that define the elements of the data tree that should
     * be sent by the target.
     * </pre>
     *
     * <code>repeated .gnmi.ModelData use_models = 7;</code>
     */
    public com.github.gnmi.proto.ModelData.Builder addUseModelsBuilder(
        int index) {
      return getUseModelsFieldBuilder().addBuilder(
          index, com.github.gnmi.proto.ModelData.getDefaultInstance());
    }
    /**
     * <pre>
     * The set of schemas that define the elements of the data tree that should
     * be sent by the target.
     * </pre>
     *
     * <code>repeated .gnmi.ModelData use_models = 7;</code>
     */
    public java.util.List<com.github.gnmi.proto.ModelData.Builder> 
         getUseModelsBuilderList() {
      return getUseModelsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.github.gnmi.proto.ModelData, com.github.gnmi.proto.ModelData.Builder, com.github.gnmi.proto.ModelDataOrBuilder> 
        getUseModelsFieldBuilder() {
      if (useModelsBuilder_ == null) {
        useModelsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.github.gnmi.proto.ModelData, com.github.gnmi.proto.ModelData.Builder, com.github.gnmi.proto.ModelDataOrBuilder>(
                useModels_,
                ((bitField0_ & 0x00000020) == 0x00000020),
                getParentForChildren(),
                isClean());
        useModels_ = null;
      }
      return useModelsBuilder_;
    }

    private int encoding_ = 0;
    /**
     * <pre>
     * The encoding that the target should use within the Notifications generated
     * corresponding to the SubscriptionList.
     * </pre>
     *
     * <code>.gnmi.Encoding encoding = 8;</code>
     */
    public int getEncodingValue() {
      return encoding_;
    }
    /**
     * <pre>
     * The encoding that the target should use within the Notifications generated
     * corresponding to the SubscriptionList.
     * </pre>
     *
     * <code>.gnmi.Encoding encoding = 8;</code>
     */
    public Builder setEncodingValue(int value) {
      encoding_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The encoding that the target should use within the Notifications generated
     * corresponding to the SubscriptionList.
     * </pre>
     *
     * <code>.gnmi.Encoding encoding = 8;</code>
     */
    public com.github.gnmi.proto.Encoding getEncoding() {
      @SuppressWarnings("deprecation")
      com.github.gnmi.proto.Encoding result = com.github.gnmi.proto.Encoding.valueOf(encoding_);
      return result == null ? com.github.gnmi.proto.Encoding.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * The encoding that the target should use within the Notifications generated
     * corresponding to the SubscriptionList.
     * </pre>
     *
     * <code>.gnmi.Encoding encoding = 8;</code>
     */
    public Builder setEncoding(com.github.gnmi.proto.Encoding value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      encoding_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The encoding that the target should use within the Notifications generated
     * corresponding to the SubscriptionList.
     * </pre>
     *
     * <code>.gnmi.Encoding encoding = 8;</code>
     */
    public Builder clearEncoding() {
      
      encoding_ = 0;
      onChanged();
      return this;
    }

    private boolean updatesOnly_ ;
    /**
     * <pre>
     * An optional field to specify that only updates to current state should be
     * sent to a client. If set, the initial state is not sent to the client but
     * rather only the sync message followed by any subsequent updates to the
     * current state. For ONCE and POLL modes, this causes the server to send only
     * the sync message (Sec. 3.5.2.3).
     * </pre>
     *
     * <code>bool updates_only = 9;</code>
     */
    public boolean getUpdatesOnly() {
      return updatesOnly_;
    }
    /**
     * <pre>
     * An optional field to specify that only updates to current state should be
     * sent to a client. If set, the initial state is not sent to the client but
     * rather only the sync message followed by any subsequent updates to the
     * current state. For ONCE and POLL modes, this causes the server to send only
     * the sync message (Sec. 3.5.2.3).
     * </pre>
     *
     * <code>bool updates_only = 9;</code>
     */
    public Builder setUpdatesOnly(boolean value) {
      
      updatesOnly_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * An optional field to specify that only updates to current state should be
     * sent to a client. If set, the initial state is not sent to the client but
     * rather only the sync message followed by any subsequent updates to the
     * current state. For ONCE and POLL modes, this causes the server to send only
     * the sync message (Sec. 3.5.2.3).
     * </pre>
     *
     * <code>bool updates_only = 9;</code>
     */
    public Builder clearUpdatesOnly() {
      
      updatesOnly_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:gnmi.SubscriptionList)
  }

  // @@protoc_insertion_point(class_scope:gnmi.SubscriptionList)
  private static final com.github.gnmi.proto.SubscriptionList DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.github.gnmi.proto.SubscriptionList();
  }

  public static com.github.gnmi.proto.SubscriptionList getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SubscriptionList>
      PARSER = new com.google.protobuf.AbstractParser<SubscriptionList>() {
    @java.lang.Override
    public SubscriptionList parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new SubscriptionList(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<SubscriptionList> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SubscriptionList> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.github.gnmi.proto.SubscriptionList getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

